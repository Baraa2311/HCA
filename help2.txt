# models.py
from django.db import models
from django.contrib.auth import get_user_model
from accounts.models import Doctor, Patient


class Appointment(models.Model):
    patient = models.ForeignKey(Patient, on_delete=models.CASCADE)
    doctor = models.ForeignKey(Doctor, on_delete=models.CASCADE)
    date = models.DateField()
    time = models.TimeField()
    duration = models.IntegerField(default=10)  # Default appointment duration in minutes
    is_follow_up = models.BooleanField(default=False)  # Whether this is a follow-up
    notes = models.TextField(blank=True, null=True)  # Additional notes from patient or doctor

    def __str__(self):
        return f"Appointment with {self.doctor.name} on {self.date} at {self.time}"

    def save(self, commit=True):
        instance = super().save(commit=False)
        instance.is_follow_up = not instance.is_new_appointment()
        if commit:
            instance.save()
        return instance
        
    def is_new_appointment(self):
        # Check if the patient has had any previous appointments with this doctor
        previous_appointments = Appointment.objects.filter(patient=self.patient, doctor=self.doctor)
        return not previous_appointments.exists()
  
# models.py
class DoctorSchedule(models.Model):
    doctor = models.ForeignKey(Doctor, on_delete=models.CASCADE)
    day = models.CharField(max_length=20)  # e.g., 'Monday'
    start_time = models.TimeField()
    end_time = models.TimeField()

    def __str__(self):
        return f"{self.doctor.name}'s schedule on {self.day} from {self.start_time} to {self.end_time}"

use the users models I provided for you in our previous conversation
I want each doctor to have a default schedule when he is activated the default schedule should be all days of the week except the weekends from 09:00am to 04:00pm
I want each doctor to be able to update his schedule 